{"version":3,"sources":["hook/NFTSmartContract.js","logo.svg","Components/Identicon.js","Images/metamask.png","Templates/AccountLayout.js","Components/Transaction.js","Templates/CollectionPage.js","Templates/AccountPage.js","Templates/LoginPages.js","Components/Layout.js","Templates/HomePage.js","hook/index.js","Components/NFTProduct.js","Components/NFTList.js","Templates/MarketPage.js","Templates/ProductDetailPage.js","Components/RouterManager.js","App.js","reportWebVitals.js","index.js","Templates/CreatePage.js","Components/CallSmartContract.js"],"names":["NFTABI","NFTJSON","NFTAddress","NFTInterface","ethers","utils","Interface","NFTContract","Contract","web3","Web3","providers","HttpProvider","useContractMethod","name","useContractFunction","transactionName","state","send","getContract","eth","getReceipt","txHash","getTransactionReceipt","decodeLog","eventName","receipt","inputs","find","item","type","logs","of","ABI","data","topics","CallEvent","getPastEvents","fromBlock","styled","div","require","Connect","setProvider","console","log","accounts","AccountLayout","h","bg","justifyContent","mt","mr","flexDirection","alignItems","w","spacing","m","to","color","this","props","children","Component","Transaction","account","ipfs","borderRadius","border","p","slice","length","src","transcationBlock","SimpleContractJSON","CollectionPage","then","v","i","tx","transactionHash","subscribe","window","ethereum","request","method","from","changCount","count","_ipfs","bind","setState","push","currentProvider","Router","path","component","CreatePage","AccountPage","LoginPage","contextData","useContext","InitContext","fontSize","MetaMaskImg","marginLeft","colorScheme","onClick","SetLogin","LoginBtn","loginstate","as","Button","Layout","React","HomePage","SimpleContractABI","SimpleContractaddress","abiInterface","NFTProduct","content","style","cursor","ml","IpfsHash","Title","ID","Price","CreateHash","Show","arrList","NFTList","AddBlock","returnValues","num","value","MarketPage","ProductDetaulPage","RouterManager","exact","createContext","a","App","useState","Provider","DAppProvider","config","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","options","label","tag","price","artworktype","title","royalties","description","link","img","img_array","ipfsHash","onChange","e","file","target","files","fileReader","FileReader","imgfile","readAsDataURL","onload","Buffer","result","readAsArrayBuffer","handleInputChange","undefined","fileLoad","align","margin","backgroundColor","md","width","height","fontWeight","defaultInputValue","isRequired","placeholder","background","textAlign","display","boxSize","fallbackSrc","position","CallSmartContract","val","deployedNFT","useEthers","ConnectWallet","ipfsClient","Boolean","create","host","port","protocol","add","res","Call","ipfshash"],"mappings":"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","file":"static/js/main.5fb260ed.chunk.js","sourcesContent":["import { useContractCall,useContractFunction } from \"@usedapp/core\";\r\nimport { ethers } from \"ethers\";\r\nimport Web3 from \"web3\";\r\nimport { of} from 'rxjs';\r\nimport ABI from 'web3-eth-abi';\r\nimport { Contract  } from \"@ethersproject/contracts\";\r\nimport  NFTJSON  from \"../SmartContract/build/contracts/NFTProduct.json\" ; \r\n\r\nconst NFTABI = NFTJSON[\"abi\"] ; // ABI\r\nconst NFTAddress = NFTJSON[\"networks\"][\"5777\"][\"address\"]; //智能合約位置\r\nconst NFTInterface = new ethers.utils.Interface(NFTABI) ; // Interface 實做\r\nconst NFTContract = new Contract(NFTAddress , NFTInterface); // Contract \r\nconst web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\")); \r\n\r\n// 使用智能合約方法\r\nexport function useContractMethod(name){\r\n    const { state , send } = useContractFunction(NFTContract, name , {transactionName : name });\r\n    return { state , send } ; \r\n}\r\n\r\n// 呼叫合約\r\nexport function getContract() {\r\n    return new web3.eth.Contract(NFTABI, NFTAddress);\r\n}\r\n// 取得 log 資訊\r\nexport function getReceipt(txHash) {\r\n    return (web3.eth.getTransactionReceipt(txHash));\r\n}\r\n\r\n// ABI 解碼\r\nexport function decodeLog(eventName, receipt) {\r\n    const abi = NFTABI.find(item => item.name === eventName && item.type === 'event')\r\n    const inputs = abi.inputs;\r\n    const logs = receipt.logs;\r\n\r\n    // rxjs 非同步回傳\r\n    return of(ABI.decodeLog(inputs, logs[0].data, logs[0].topics));\r\n}\r\n\r\n// 取得事件\r\nexport function CallEvent(){\r\n    const contract = getContract(); // 取得合約\r\n    // 從第0個Block 開始找尋\r\n    const eventOption = {\r\n        fromBlock: 0\r\n    }\r\n    // 取得事件     \r\n    const event = contract.getPastEvents('Success' , eventOption );    \r\n    return (event);\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useRef } from \"react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Flex, Text , Box } from \"@chakra-ui/react\"\r\nimport { parseInt } from \"lodash\";\r\nimport Jazzicon from 'react-jazzicon' ; \r\n\r\n\r\n// styled Component 透過 Props 取得對的顏色\r\nconst StyledIdenticon = styled.div`\r\n  height: 8rem;\r\n  width: 8rem;\r\n  border-radius: 10rem;\r\n  background-color: black;\r\n`;\r\n\r\n\r\nexport default function Identicon() {\r\n    const { ConnectWallet, account } = useEthers();\r\n    const jazz = parseInt(account.slice(2,10),16);\r\n    return  <Jazzicon diameter={100} seed = { jazz } />\r\n     \r\n}","export default __webpack_public_path__ + \"static/media/metamask.0e2bf52b.png\";","import { Flex, Text, Box, Button, HStack } from \"@chakra-ui/react\";\r\nimport Identicon from \"../Components/Identicon\";\r\nimport { useEthers, useEtherBalance, useTokenBalance } from \"@usedapp/core\";\r\nimport { formatEther } from '@ethersproject/units'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Component } from \"react\";\r\nvar Web3 = require('web3')\r\nvar web3 = new Web3()\r\n\r\n\r\nfunction Connect() {\r\n    web3.setProvider(new web3.providers.HttpProvider('http://192.168.31.7:8000'));\r\n    console.log(web3.eth.accounts)    \r\n    // const { ConnectWallet, account } = useEthers();\r\n    // const etherBalance = useEtherBalance(account)\r\n    // return account ?\r\n    //     <Box\r\n    //         align=\"center\"\r\n    //     >\r\n    //         <Text fontSize=\"20px\" mt=\"5.5\">\r\n    //             {account}\r\n    //         </Text>\r\n    //         <Text fontSize=\"25px\" mt=\"5.5\">\r\n    //             {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH\r\n    //         </Text>\r\n    //     </Box>\r\n\r\n    //     :\r\n    //     <Button onClick={() => ConnectWallet()}> 連接錢包 </Button>\r\n}\r\n\r\n\r\n\r\nclass AccountLayout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Box h=\"230px\" bg=\"gray.200\">\r\n                    <Flex justifyContent=\"center\">\r\n                        <Flex\r\n                            mt=\"5\"\r\n                            mr=\"30px\"\r\n                            flexDirection=\"column\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            {/* <Identicon /> */}\r\n                            <Connect />\r\n                        </Flex>\r\n                    </Flex>\r\n                </Box>\r\n                <Box h=\"30px\"  >\r\n                    <Flex justifyContent=\"center\">\r\n                        <Box\r\n                            w=\"730px\"\r\n                            h=\"50px\"\r\n                        >\r\n                            <Flex justifyContent=\"ceneter\">\r\n                                <HStack spacing=\"24px\" m=\"1.5\" >\r\n\r\n                                    <Link to=\"/CollectionPage\">\r\n                                        <Button bg=\"gray.300\" w=\"150px\" color=\"gray.600\">\r\n                                            Collection\r\n                                        </Button>\r\n                                    </Link>  \r\n\r\n                                    <Link to=\"/CreatePage\">\r\n                                        <Button bg=\"gray.300\" w=\"150px\" color=\"gray.600\">\r\n                                            Create\r\n                                        </Button>\r\n                                    </Link>\r\n                                    <Button bg=\"gray.300\" w=\"150px\" color=\"gray.600\"> Favorite  </Button>\r\n                                    <Button bg=\"gray.300\" w=\"150px\" color=\"gray.600\"> Transaction </Button>\r\n                                </HStack>\r\n                            </Flex>\r\n                        </Box>\r\n                    </Flex>\r\n                </Box>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountLayout\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Text, Box, Flex , Image } from \"@chakra-ui/react\";\r\n\r\nclass Transaction extends Component {\r\n    render() {\r\n        let {account , ipfs} = this.props;\r\n\r\n        return (\r\n            <Box\r\n                borderRadius=\"2xl\"\r\n                bg = \"yellow.300\"\r\n                border=\"1px solid black\"            \r\n                m=\"10px\"\r\n                p=\"10px\"\r\n                w=\"250px\"\r\n                h=\"220px\"\r\n            >\r\n\r\n                <Text > Account : {account && `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                )}`} </Text>                \r\n                 <Image w=\"100%\" h = \"90%\" src= { ipfs} />\r\n\r\n\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Transaction;","import React, { Component, useState } from 'react';\r\nimport { Flex, Text, Box, Button, HStack } from \"@chakra-ui/react\";\r\nimport SimpleContractJSON from \"../SmartContract/build/contracts/SimpleContract.json\" // 取得智能合約\r\nimport Transaction from '../Components/Transaction';\r\n\r\nimport {getContract , getReceipt , decodeLog } from \"../hook/NFTSmartContract\";\r\n\r\n\r\n\r\nconst SimpleContractABI = SimpleContractJSON[\"abi\"]; // 智能合約ABI\r\n\r\n\r\n\r\nlet transcationBlock = [];\r\n\r\nclass CollectionPage extends Component {\r\n    constructor() {\r\n        super()\r\n        transcationBlock = [] ;\r\n        // 取得合約\r\n        const contract = getContract();\r\n        \r\n        const eventOption = {\r\n            fromBlock: 0\r\n        }\r\n\r\n        // 將Event取出ABI 後解碼，並篩選account\r\n        contract.getPastEvents('BuySuccess', eventOption)\r\n            .then(\r\n                (v) => {\r\n                    for (var i = 0; i < v.length; i++) {\r\n                        var tx = v[i].transactionHash;\r\n                        getReceipt(tx).then(\r\n                            receipt => decodeLog('BuySuccess', receipt).subscribe(\r\n                                log => {\r\n                                    window.ethereum.request({method:'eth_requestAccounts'}).then(\r\n                                        (account) => {                                            \r\n                                            if(account == receipt.from ){                                                                                          \r\n                                                this.changCount(log.count,receipt.from, log._ipfs);\r\n                                            }\r\n                                        }\r\n                                    )                                    \r\n                                }\r\n                            )\r\n                        )\r\n                    }\r\n                }\r\n            );\r\n\r\n        this.changCount = this.changCount.bind(this); // 綁定      \r\n    }\r\n\r\n    changCount(v,account , ipfs) {\r\n        this.setState({ count: v });\r\n        transcationBlock.push(<Transaction account= {account} ipfs= {ipfs} />);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Flex\r\n                flexDirection = \"row\"\r\n                mt = \"20px\"\r\n            >\r\n                {transcationBlock}\r\n            </Flex>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollectionPage;","import React, { Component, useEffect } from \"react\";\r\nimport AccountLayout from \"./AccountLayout\";\r\nimport Web3 from \"web3\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport CollectionPage from \"./CollectionPage\"\r\nimport CreatePage from \"./CreatePage\";\r\n\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);\r\n\r\nfunction Router() {\r\n    return (\r\n        <div>\r\n            <Route path=\"/CollectionPage\" component={CollectionPage} />\r\n            <Route path=\"/CreatePage\" component={CreatePage} />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass AccountPage extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <AccountLayout />\r\n                <Router />            \r\n            </BrowserRouter> \r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountPage;\r\n","import React, { Component, useContext } from 'react';\r\nimport { Text, Button, Flex, Image } from '@chakra-ui/react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport ABI from 'web3-eth-abi';\r\nimport { throwError, of } from 'rxjs';\r\nimport MetaMaskImg from '../Images/metamask.png';\r\nimport AccountPage from './AccountPage';\r\nimport { InitContext } from '../App';\r\nimport context from 'react-bootstrap/esm/AccordionContext';\r\n\r\n\r\n// 連接Ganache\r\nvar web3 = require(\"web3\");\r\nvar Contract = require('web3-eth-contract');\r\n\r\n// 設置預設帳號\r\nfunction setDefaultAccount(account) {\r\n    web3.eth.defaultAccount = account\r\n}\r\n// 取得預設帳號\r\nfunction getDefaultAccount() {\r\n    return (web3.eth.defaultAccount);\r\n}\r\n// 取得第幾塊區塊鏈\r\nfunction getBlock(index) {\r\n    return (web3.eth.getBlock(index));\r\n}\r\n//獲取當前區塊鏈數字\r\nfunction getCurrentBlockNumber() {\r\n    return (web3.eth.getBlockNumber());\r\n}\r\n\r\n\r\n//發起交易 parmas字段\r\nfunction sendTransaction(params) {\r\n    return (web3.eth.sendTransaction(params));\r\n}\r\n// 取得合約內容\r\nfunction getResume(abi, address) {\r\n    return new web3.eth.Contract(abi, address);\r\n}\r\n\r\n// abi 解碼\r\nfunction decodeLog(eventName, receipt) {\r\n    const abi = abiResume.find(item => item.name === eventName && item.type === 'event');\r\n    if (!abi) {\r\n        return throwError(`Not found event: ${eventName}`);\r\n    }\r\n\r\n    const inputs = abi.inputs;\r\n    const logs = receipt.logs;\r\n    return of(ABI.decodeLog(inputs, logs[0].data, logs[0].topics));\r\n\r\n}\r\n\r\n// 取得合約\r\nconst abiResume = require(\"../SmartContract/build/contracts/Resume.json\");\r\nconst ResumeAddress = \"0x428d56FE58b587Db08560d317427B39d634A6E47\";\r\n\r\n\r\n\r\nfunction LoginPage() {\r\n    const contextData = useContext(InitContext);\r\n    function LoginMetaMask() {\r\n        contextData.SetLogin(1);\r\n        return (<AccountPage />);\r\n    }\r\n\r\n\r\n    return (\r\n        <Flex\r\n            flexDirection=\"column\"\r\n            h=\"100vh\"\r\n            bg=\"gray.100\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n        >\r\n            <Flex\r\n                flexDirection=\"column\"\r\n                h=\"100vh\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Text fontSize=\"4xl\"> Sign in to your wallet </Text>\r\n                <Image type=\"image\" src={MetaMaskImg} />\r\n\r\n                <Link to=\"/AccountPage\">\r\n                    <Button marginLeft=\"100px\" w=\"200px\" h=\"60px\" colorScheme=\"blue\" onClick={LoginMetaMask} >\r\n                        Login with MetaMask\r\n                    </Button>\r\n                </Link>\r\n\r\n\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { Component, useState, useContext } from 'react';\r\nimport { Text, Flex, Grid, Box, GridItem, Button, Spacer } from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\"\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport Identicon from './Identicon';\r\nimport { useEthers } from '@usedapp/core';\r\nimport { InitContext } from '../App';\r\nimport LoginPage from '../Templates/LoginPages';\r\n\r\nfunction MouseEnter() {\r\n  return (\r\n    <Text>a</Text>\r\n  );\r\n}\r\n\r\n\r\nfunction LoginBtn() {\r\n  const contextData = useContext(InitContext);\r\n\r\n  return contextData.loginstate === 0 ? (\r\n    <Link to=\"/LoginPage\">\r\n      <Button mr=\"4\" mt=\"1\">\r\n        Log In\r\n      </Button>\r\n    </Link>\r\n  ) :\r\n    <Menu >\r\n        <MenuButton as={Button} colorScheme='pink'\r\n         mr= \"4\" mt = \"1\" >\r\n          Profile\r\n        </MenuButton>\r\n        <MenuList>\r\n          <MenuItem> \r\n            <Link to=\"/AccountPage\" >   \r\n            Profile \r\n            </Link>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Link to=\"/LoginPage\" \r\n              onClick={() => contextData.SetLogin(0)}\r\n             >     \r\n              Log Out\r\n            </Link>\r\n          </MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    ;\r\n}\r\n\r\n\r\n\r\nclass Layout extends React.Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Flex\r\n          h=\"50px\"\r\n          bg=\"gray.500\"\r\n        >\r\n          <Button m=\"4\" mt=\"1\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n          </Button>\r\n          <Button m=\"4\" mt=\"1\">\r\n            <Link to=\"/MarketPage\">\r\n              Market\r\n            </Link>\r\n          </Button>\r\n          <Spacer />\r\n            <LoginBtn />\r\n        </Flex>\r\n        {this.props.children}\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n\r\n","import React,{Component} from \"react\";\r\n\r\n\r\nclass HomePage extends Component {\r\n    render(){\r\n        return <p>首頁</p>\r\n    }\r\n}\r\n\r\nexport { HomePage }","\r\nimport { useContractCall,useContractFunction } from \"@usedapp/core\";\r\nimport { ethers } from \"ethers\";\r\nimport { Contract  } from \"@ethersproject/contracts\";\r\nimport SimpleContractJSON from \"../SmartContract/build/contracts/SimpleContract.json\" // 取得智能合約\r\n// import   SimpleContractJSON  from \"../SmartContract/build/contracts/NFTProduct.json\" ; \r\n\r\n\r\n\r\nconst SimpleContractABI = SimpleContractJSON[\"abi\"]; // 智能合約ABI\r\n\r\n\r\nconst SimpleContractaddress = SimpleContractJSON[\"networks\"][\"5777\"][\"address\"]; // 智能合約位置\r\n\r\nconst abiInterface = new ethers.utils.Interface(SimpleContractABI);  // 使用Interface 實例 abi \r\nconst contract = new Contract(SimpleContractaddress, abiInterface) ;  // 使用 Contract 將 address 跟 Interface 整合\r\n\r\n// 使用智能合約方法\r\nexport function useContractMethod(name){\r\n    const { state , send } = useContractFunction(contract, name , {transactionName : name });\r\n    return { state , send } ; \r\n}\r\n\r\n// 取值\r\nexport function GetValue() {\r\n    const count = useContractCall({\r\n        abi : abiInterface,\r\n        address : SimpleContractaddress,\r\n        method: \"count\",\r\n        args: []\r\n    }); \r\n    return count ;\r\n}","import { Text, Flex, Grid, Box, GridItem, Button, Spacer, Image } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BuyButton from \"../Components/BuyButton\";\r\n\r\nexport default function NFTProduct(props) {\r\n\r\n    function Show() {\r\n        const content = props.content;\r\n        return (\r\n            <label\r\n                style={{\r\n                    cursor: \"pointer\"\r\n                }}\r\n            >\r\n                {/* <Link to = \"/asset\"> */}\r\n                <Box\r\n                    bg=\"yellow.200\"\r\n                    w=\"320px\"\r\n                    h=\"400px\"\r\n                    m=\"20px\"\r\n                    border=\"1px solid gray.600\"\r\n                    borderRadius=\"3xl\"\r\n                >\r\n                    <Flex\r\n                        alignItems=\"flex-end\"\r\n                        mt=\"2%\"\r\n                        mr=\"5%\"\r\n                        ml=\"5%\"\r\n                    >\r\n                        <Image\r\n                            w=\"300px\"\r\n                            h=\"300px\"\r\n                            border=\"1px solid #595656\"\r\n                            borderRadius=\"10px\"\r\n                            src={content.IpfsHash} />\r\n                    </Flex>\r\n\r\n                    <Flex\r\n                        alignItems=\"flex-end\"\r\n                        mt=\"2%\"\r\n                        mr=\"5%\"\r\n                        ml=\"5%\"\r\n                    >\r\n\r\n                        <Text\r\n                            fontSize=\"1xl\"\r\n                        > {content.Title}  #{content.ID}  </Text>\r\n                    </Flex>\r\n                    <Flex mr=\"2%\" ml=\"5%\" mr=\"5%\" >\r\n                        <Text fontSize=\"1xl\" ml=\"0.5px\"> Price : </Text>\r\n                        <Spacer />\r\n                        <Text fontSize=\"1xl\" ml=\"2px\"> {content.Price} ETH </Text>\r\n                    </Flex>\r\n                    <Flex mr=\"2%\" ml=\"5%\" mr=\"5%\">\r\n                        <Text fontSize=\"1xl\" >\r\n                            Creator :\r\n                        </Text>\r\n                        <Spacer />\r\n                        <Text fontSize=\"1xl\">\r\n                            {content.CreateHash && `${content.CreateHash.slice(0, 6)}...${content.CreateHash.slice(\r\n                                content.CreateHash.length - 4,\r\n                                content.CreateHash.length\r\n                            )}`}\r\n                        </Text>\r\n                        \r\n                    </Flex>                   \r\n\r\n                    {/* <Flex\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-end\"\r\n                    height=\"auto\"\r\n                    mt = \"2%\"\r\n                >\r\n                  <BuyButton val = { content }/>\r\n                </Flex> */}\r\n                </Box>\r\n                {/* </Link> */}\r\n            </label>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Show()}\r\n        </div>\r\n    );\r\n}","import React,{ useState , Component} from \"react\";\r\nimport { Text, Flex, Grid, Box, GridItem, Button, Spacer } from \"@chakra-ui/react\";\r\nimport NFTProduct from \"./NFTProduct\";\r\nimport { CallEvent , getReceipt  } from \"../hook/NFTSmartContract\";\r\nimport { throwStatement } from \"@babel/types\";\r\n\r\nlet arrList = [];\r\nconst list = <NFTProduct/>\r\n\r\nclass NFTList extends Component {    \r\n    constructor(props) {        \r\n        super(props);      \r\n        arrList = [];  \r\n\r\n        this.AddBlock = this.AddBlock.bind(this);        \r\n        CallEvent().then (\r\n            (v) => {                 \r\n                for(let i = 0 ; i < v.length ; i ++){\r\n                    this.AddBlock( i ,v[i].returnValues);\r\n                }               \r\n            }\r\n        );        \r\n       \r\n    }\r\n\r\n    AddBlock(num , value ){\r\n        this.setState({ count: num });\r\n        arrList.push(\r\n            <NFTProduct content = { value } /> \r\n        );\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <Flex key= \"{arrList}\">\r\n            { arrList }\r\n          </Flex>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NFTList\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Text, Flex, Grid, Box, GridItem, Button, Spacer } from \"@chakra-ui/react\";\r\nimport Count from \"../Components/Count\";\r\nimport NFTList from \"../Components/NFTList\";\r\n\r\n\r\n\r\nclass MarketPage extends Component {\r\n    render() {\r\n        return (           \r\n            <div>\r\n                <Box\r\n                    borderRadius=\"2xl\"\r\n                    border=\"1px solid black\"\r\n                    m=\"10px\"\r\n                    p=\"10px\"\r\n                    w=\"99%\"\r\n                    h=\"100px\"\r\n                > \r\n                    <Text fontSize=\"5xl\"> NFT Explore </Text>\r\n                </Box>                \r\n                <NFTList />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { MarketPage }","import { Text } from \"@chakra-ui/react\";\r\n\r\n\r\n\r\n\r\nexport default function ProductDetaulPage(){\r\n    return( \r\n        <Text> tttt </Text>\r\n    );\r\n}","import React, { Component } from \"react\"\r\nimport LoginPage from '../Templates/LoginPages';\r\nimport { HomePage } from '../Templates/HomePage';\r\nimport { MarketPage } from '../Templates/MarketPage';\r\nimport { Route} from \"react-router-dom\";\r\nimport AccountPage from \"../Templates/AccountPage\";\r\nimport ProductDetaulPage from \"../Templates/ProductDetailPage\";\r\n\r\nclass RouterManager extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Route exact path=\"/\" component={HomePage}></Route>\r\n                <Route path = \"/MarketPage\" component={ MarketPage }></Route> \r\n                <Route path=\"/LoginPage\" component={LoginPage}></Route>\r\n                <Route path=\"/AccountPage\" component={AccountPage}></Route>\r\n                <Route path=\"/asset\" component={ProductDetaulPage} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouterManager","import React, { useState, createContext } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport Layout from './Components/Layout';\nimport RouterManager from './Components/RouterManager';\nimport { DAppProvider } from \"@usedapp/core\";\n\n\nexport const InitContext = createContext({\n  a: 1\n});\n\nfunction App() {\n  const [loginstate, SetLogin] = useState(0);\n\n  return (\n    <InitContext.Provider\n      value={{\n        loginstate,\n        SetLogin\n      }}\n    >\n      <DAppProvider config={{}} >\n        <ChakraProvider>\n          <Layout >\n             <RouterManager />\n          </Layout>\n            \n        </ChakraProvider>\n      </DAppProvider>\n    </InitContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n    Text, Flex, Box, Input, Image, HStack,\r\n    NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Spacer\r\n} from \"@chakra-ui/react\";\r\nimport Select from 'react-select';\r\nimport CallSmartContract from \"../Components/CallSmartContract\";\r\n\r\nconst options = [\r\n    { value: 'Picture', label: 'Picture', tag: \"artworktype\" },\r\n    { value: 'GIF', label: 'GIF', tag: \"artworktype\" },\r\n    { value: 'Video', label: 'Video', tag: \"artworktype\" },\r\n    { value: 'Audio', label: 'Audio', tag: \"artworktype\" }\r\n]\r\n\r\nclass CreatePage extends Component {\r\n    state = {\r\n        price: \"\",\r\n        num: \"\",\r\n        artworktype: \"\",\r\n        title: \"\",\r\n        royalties: \"\",\r\n        description: \"\",\r\n        link: \"\",\r\n        img: \"\",\r\n        img_array: \"\",\r\n        ipfsHash: \"\"\r\n    };\r\n\r\n    onChange = e => {\r\n        const file = e.target.files.item(0);\r\n        const fileReader = new FileReader();\r\n        const imgfile = new FileReader();\r\n        imgfile.readAsDataURL(file);\r\n        imgfile.onload = () => {\r\n            this.setState({ img: Buffer(imgfile.result) })\r\n        }\r\n        fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = () => {\r\n            this.setState({ img_array: Buffer(fileReader.result) })\r\n        }\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        const target = e.target == undefined ? e.value : e.target;\r\n        const value = target.value == undefined ? e.value : target.value;\r\n\r\n        const name = target.name == undefined ? e.tag : target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    fileLoad = e => {\r\n        this.setState({\r\n            img: e.target.result\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div align=\"center\">\r\n                <Box\r\n                    margin=\"5\"\r\n                    backgroundColor=\"gray.300\"\r\n                    borderRadius=\"2xl\"\r\n                    align=\"left\"\r\n                    md=\"10px\"\r\n                    width=\"1500px\"\r\n                    p=\"1px\"\r\n                >\r\n                    <form>\r\n\r\n                        <Box margin=\"10\" height=\"1000px\" md=\"10px\">\r\n                            <Text\r\n                                fontSize=\"3xl\"\r\n                                fontWeight=\"bold\"\r\n                                height=\"100px\"\r\n                            > Create new item </Text>\r\n                            <Flex  >\r\n\r\n                                <Box  >\r\n                                    <Text fontSize=\"2xl\" height=\"50px\"> ArtWork Type  </Text>\r\n                                    <Select\r\n                                        defaultInputValue={this.state.artworktype}\r\n                                        name=\"artworktype\"\r\n                                        onChange={this.handleInputChange}\r\n                                        options={options}\r\n                                        isRequired=\"true\"\r\n                                    />\r\n                                    <Text\r\n                                        mt=\"10px\"\r\n                                        fontSize=\"2xl\"\r\n                                        height=\"50px\"\r\n\r\n                                    > Title </Text>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter the ArtWork Name\"\r\n                                        name=\"title\"\r\n                                        background=\"gray.200\"\r\n                                        onChange={this.handleInputChange}\r\n                                        isRequired={true}\r\n                                    />\r\n                                    <HStack\r\n                                        alignItems=\"center\"\r\n                                        spacing=\"10px\">\r\n                                        <Text fontSize=\"2xl\" mt=\"10px\"> Price </Text>\r\n                                        <NumberInput\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            width=\"20%\"\r\n                                            background=\"gray.200\"\r\n                                            borderRadius=\"5px\"\r\n                                            isRequired={true}\r\n                                        >\r\n                                            <NumberInputField\r\n                                                placeholder=\"0\"\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                        </NumberInput>\r\n\r\n\r\n                                        <Text fontSize=\"2xl\" mt=\"10px\"> Number </Text>\r\n                                        <NumberInput\r\n                                            type=\"text\"\r\n                                            ml=\"20px\"\r\n                                            name=\"num\"\r\n                                            width=\"20%\"\r\n                                            background=\"gray.200\"\r\n                                            borderRadius=\"5px\"\r\n                                            isRequired={true}\r\n                                        >\r\n                                            <NumberInputField\r\n                                                placeholder=\"0\"\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                        </NumberInput>\r\n                                    </HStack>\r\n\r\n                                    <Text fontSize=\"2xl\" mt=\"10px\"> Royalties </Text>\r\n                                    <Flex width=\"80%\">\r\n                                        <NumberInput\r\n                                            type=\"text\"\r\n                                            name=\"royalties\"\r\n                                            width=\"100%\"\r\n                                            background=\"gray.200\"\r\n                                            borderRadius=\"5px\"\r\n                                            isRequired={true}\r\n                                        >\r\n                                            <NumberInputField\r\n                                                placeholder=\"0\"\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                        </NumberInput>\r\n                                        <Spacer />\r\n                                        <Text fontSize=\"160%\" ml=\"2%\"  > % </Text>\r\n                                    </Flex>\r\n                                </Box>\r\n                                <Box ml=\"40px\" height=\"relative\">\r\n                                    <Text fontSize=\"2xl\" height=\"50px\"> Upload artwork image  </Text>\r\n                                    <label\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            textAlign: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <Input\r\n                                            type=\"file\"\r\n                                            display=\"none\"\r\n                                            onChange={this.onChange}\r\n                                            isRequired={true}\r\n                                        />\r\n                                        <Box\r\n                                            height=\"80%\"\r\n                                        >\r\n                                            <Image\r\n                                                boxSize=\"300px\"\r\n                                                fallbackSrc=\"https://via.placeholder.com/150\"\r\n                                                border=\"1px dashed #595656\"\r\n                                                borderRadius=\"10px\"\r\n                                                position=\"absoulate\"\r\n                                                src={this.state.img}\r\n                                            />\r\n                                        </Box>\r\n                                    </label>\r\n\r\n                                </Box>\r\n                            </Flex>\r\n\r\n                            <Text fontSize=\"2xl\" mt=\"10px\"> Description </Text>\r\n                            <Input\r\n                                placeholder=\"Enter the brief introduction\"\r\n                                height=\"150px\"\r\n                                name=\"description\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <Text fontSize=\"2xl\" mt=\"10px\"> Social Media / Profile Link </Text>\r\n                            <Input\r\n                                placeholder=\"Personal website, Instragram, Twitter , etc. \"\r\n                                onChange={this.handleInputChange}\r\n                                name=\"link\"\r\n                            />\r\n\r\n                            <CallSmartContract value={this.state} />\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePage;","import React, { useState } from \"react\";\r\n// import { useContractMethod } from \"../hook/NFTSmartContract\"\r\nimport { Text, Flex, Grid, Box, GridItem, Button, Spacer, Input } from \"@chakra-ui/react\";\r\nimport { getJSON, useContractMethod, GetValue } from \"../hook/NFTSmartContract\";\r\nimport { useEthers, useEtherBalance, useTokenBalance } from \"@usedapp/core\";\r\n\r\n\r\nexport default function CallSmartContract(val) {\r\n\r\n    const { state, send: deployedNFT } = useContractMethod(\"DeployedNFT\");\r\n\r\n    const { ConnectWallet, account } = useEthers();\r\n\r\n    const value = val.value;\r\n\r\n    async function deployed() {\r\n        const ipfsClient = require('ipfs-http-client');\r\n        // const bol = Boolean(value.img_array) ; \r\n        if (Boolean(value.img_array) === true && Boolean(value.title) === true && Boolean(value.royalties) === true\r\n            && Boolean(value.price) === true ) {\r\n            const data = value.img_array;\r\n            // const data = \"text\"\r\n            // ipfs infura 測試鏈\r\n            //  const ipfs = ipfsClient.create({ host: 'ipfs.infura.io', port: '5001', protocol: 'http' })\r\n            const ipfs = ipfsClient.create({\r\n                host: 'localhost',\r\n                port: '5001',\r\n                protocol: 'http'\r\n            });\r\n            await ipfs.add(data).then(res =>\r\n                value.ipfsHash = 'https://ipfs.io/ipfs/' + res.path\r\n            );\r\n            Call();\r\n        }\r\n\r\n    }\r\n\r\n    function Call() {\r\n        const price = value.price;        \r\n        const num = value.num ; \r\n        const artworktype = value.artworktype;\r\n        const description = value.description;\r\n        const ipfshash = value.ipfsHash;\r\n        const link = value.link;\r\n        const title = value.title;\r\n        const royalties = value.royalties;\r\n        deployedNFT(title,num , price, artworktype, royalties, ipfshash, description, link);\r\n    }\r\n\r\n    return (\r\n        <div>            \r\n            <Flex justifyContent=\"center\">\r\n                <Button mt=\"10px\" width=\"100%\" onClick={deployed} >  Deployed   </Button>\r\n            </Flex>\r\n            <Text ml=\"10px\"> 產生IPFS 密碼 :  {value.ipfsHash}</Text>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}